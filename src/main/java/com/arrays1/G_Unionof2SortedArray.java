package main.java.com.arrays1;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

public class G_Unionof2SortedArray {


    public static ArrayList<Integer> findUnion(int[] a, int[] b) {
        Set<Integer> uniqueSet = new HashSet<>();
        for(int num:a) {
            uniqueSet.add(num);
        }
        for(int num:b) {
            uniqueSet.add(num);
        }
        ArrayList<Integer> arr = new ArrayList<>(uniqueSet);
        Collections.sort(arr);
        return arr;
       //return new ArrayList<>(uniqueSet).stream().sorted().collect(Collectors.toCollection(ArrayList::new));

    }
    public static void main(String[] args) {
//        System.out.println(searchInSortedArrUsingBS(new int[]{1,1,6,7,7,7,15,16,17,18,18,18,19,23,24,24,24,25,27,28,29,30,31,31,32,32,33,33,34,36,37,38,39,39,39,40,41,43,43,44,48,48,49,49,54,56,57,58,62,68,70,70,70,71,72,73,74,74,75,77,77,78,79,82,82,84,87,88,88,91,99,99,101,101,102,103,104,108,108,113,113,113,114,118,120,121,124,127,127,129,129,129,132,132,134,134,137,140,142,149,149,149,151,152,152,153,154,157,163,165,169,170,171,172,173,174,175,176,176,177,178,180,181,183,184,186,186,188,188,189,191,191,192,194,194,195,195,195,197,201,202,204,205,208,208,212,212,213,215,215,215,216,216,217,218,218,219,220,221,223,223,228,228,229,230,230,230,232,235,235,236,236,236,237,240,241,245,245,246,248,254,255,255,256,257,258,260,260,265,265,267,269,269,270,272,274,276,278,280,282,284,285,285,287,288,289,293,295,298,301,301,302,304,307,310,311,315,318,319,319,320,323,325,325,327,329,329,333,334,335,337,338,338,338,341,341,342,344,345,348,349,352,353,353,354,355,356,357,358,359,360,368,369,369,370,374,377,378,378,379,380,382,384,384,387,387,389,389,391,391,392,394,397,398,401,401,402,403,403,403,406,406,406,411,412,413,414,414,415,416,417,420,422,427,430,430,435,438,440,441,441,443,443,444,446,447,448,448,448,448,454,455,459,462,463,465,466,471,471,472,473,473,476,477,483,486,486,486,488,490,491,493,497,498,499,499,502,503,504,504,505,505,508,510,510,511,511,511,512,512,512,514,515,515,517,523,524,524,525,525,526,531,531,532,535,535,540,540,541,541,541,543,543,544,547,547,548,549,549,550,551,551,554,555,556,560,561,562,563,563,563,565,567,568,569,570,571,572,574,574,576,577,577,581,582,583,584,584,587,590,591,592,592,593,593,594,596,596,597,598,600,600,601,603,604,606,608,609,609,612,612,612,613,616,617,617,622,623,623,628,629,633,637,637,638,639,640,640,642,643,645,647,649,655,656,657,658,660,661,664,664,665,666,666,668,668,669,670,672,673,674,674,675,675,676,676,677,678,681,681,684,685,685,686,687,689,690,691,694,697,698,699,700,702,704,707,708,711,711,712,715,717,718,719,719,719,720,724,724,724,732,733,733,735,737,740,741,741,742,744,745,747,747,752,754,754,755,755,755,758,760,771,772,774,775,777,777,779,779,780,780,783,785,789,790,792,793,793,794,795,796,796,796,797,801,802,808,810,812,812,812,812,813,813,813,814,815,816,818,818,818,819,820,822,823,824,824,825,825,826,827,828,830,830,833,836,837,837,843,844,845,848,852,853,853,854,861,862,863,865,865,867,868,871,872,873,874,874,874,876,876,876,887,889,890,900,904,905,905,907,908,909,912,913,913,914,914,916,917,918,921,921,921,922,922,925,927,927,928,930,930,933,933,933,935,936,936,937,937,939,939,941,943,944,944,945,945,945,947,949,953,954,954,955,956,957,958,959,959,960,960,960,961,962,963,963,964,965,965,966,970,971,971,972,972,975,976,978,978,982,985,985,986,986,987,990,993,996,997,998,999},820));
    }

}
